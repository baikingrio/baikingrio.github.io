<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>稻草人</title>
  <subtitle>大成若缺，其用不弊；大盈若冲，其用不穷。大直若屈，大巧若拙，大辩若诺。躁胜寒，静胜热，清静为天下正。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.googol.tech/"/>
  <updated>2017-08-24T08:05:58.129Z</updated>
  <id>http://www.googol.tech/</id>
  
  <author>
    <name>稻草人</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubernetes Node 安装与配置(Ubuntu系统)</title>
    <link href="http://www.googol.tech/2017/08/23/Kubernetes-Node-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE-Ubuntu%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.googol.tech/2017/08/23/Kubernetes-Node-安装与配置-Ubuntu系统/</id>
    <published>2017-08-23T09:44:08.000Z</published>
    <updated>2017-08-24T08:05:58.129Z</updated>
    
    <content type="html"><![CDATA[<p>内网下已经搭建好Kubernetes集群，由两台CentOS组成。</p>
<blockquote>
<p>192.168.1.11 Master<br>192.168.1.12 Node</p>
</blockquote>
<p>由于之前搭建时操作的都是CentOS系统中的安装与配置，与Ubuntu下还是有些区别。这里主要记录下将Ubuntu系统的主机加入到Kubernetes集群中的操作步骤。</p>
<blockquote>
<p>待操作的主机基本情况</p>
<p>Ubuntu 版本: 16.04<br>IP: 192.168.1.13</p>
</blockquote>
<p>因为在kubernetes节点上需要运行kubelet、kube-proxy、docker和flannel服务并进行相关配置才能正常加入到集群中，所以先一个服务一个服务来安装。</p>
<p>kubelet和kube-proxy两个都属于Kubernetes源码相关的，所先下载下来。<br>Client二进制下载：<a href="https://dl.k8s.io/v1.5.5/kubernetes-client-linux-amd64.tar.gz" target="_blank" rel="external">https://dl.k8s.io/v1.5.5/kubernetes-client-linux-amd64.tar.gz</a><br>Server二进制下载：<a href="https://dl.k8s.io/v1.5.5/kubernetes-server-linux-amd64.tar.gz" target="_blank" rel="external">https://dl.k8s.io/v1.5.5/kubernetes-server-linux-amd64.tar.gz</a> </p>
<p>实际上只需要用到kubernetes-server-linux-amd64，kubernetes-client-linux-amd64中只有一个kubectl,这是master上需要用的，这里只是负责node节点的部署所以用不上。<br>解压kubernetes-server-linux-amd64.tar.gz，将/server/bin/目录下的kubelet、kube-proxy拷贝到/usr/bin/目录下。</p>
<h2 id="通用配置"><a href="#通用配置" class="headerlink" title="通用配置"></a>通用配置</h2><p>这部分内容是Master与Node上通用的配置操作</p>
<h3 id="创建Kubernetes配置目录"><a href="#创建Kubernetes配置目录" class="headerlink" title="创建Kubernetes配置目录"></a>创建Kubernetes配置目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/kubernetes</div></pre></td></tr></table></figure>
<h3 id="创建Kubernetes通用配置文件"><a href="#创建Kubernetes通用配置文件" class="headerlink" title="创建Kubernetes通用配置文件"></a>创建Kubernetes通用配置文件</h3><p>/etc/kubernetes/config文件中，存储的是Kubernetes各组件的通用配置信息。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/kubernetes/config</div><div class="line"></div><div class="line">KUBE_LOGTOSTDERR="--logtostderr=true"</div><div class="line">KUBE_LOG_LEVEL="--v=0"</div><div class="line">KUBE_ALLOW_PRIV="--allow-privileged=false"</div><div class="line">KUBE_MASTER="--master=http://192.168.1.11:8080"</div></pre></td></tr></table></figure></p>
<h2 id="配置-Kubelet"><a href="#配置-Kubelet" class="headerlink" title="配置 Kubelet"></a>配置 Kubelet</h2><h3 id="1-创建kubelet的数据目录"><a href="#1-创建kubelet的数据目录" class="headerlink" title="1. 创建kubelet的数据目录"></a>1. 创建kubelet的数据目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /var/lib/kubelet</div></pre></td></tr></table></figure>
<h3 id="2-创建kubelete配置文件"><a href="#2-创建kubelete配置文件" class="headerlink" title="2. 创建kubelete配置文件"></a>2. 创建kubelete配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/kubernetes/kubelet</div><div class="line"></div><div class="line">KUBELET_ADDRESS="--address=127.0.0.1"</div><div class="line">KUBELET_HOSTNAME="--hostname-override=192.168.1.13"</div><div class="line">KUBELET_API_SERVER="--api-servers=http://192.168.1.11:8080"</div><div class="line"><span class="meta">#</span> pod infrastructure container</div><div class="line">KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest"</div><div class="line">KUBELET_ARGS="--enable-server=true --enable-debugging-handlers=true"</div></pre></td></tr></table></figure>
<h3 id="3-创建kubelet-service文件"><a href="#3-创建kubelet-service文件" class="headerlink" title="3. 创建kubelet.service文件"></a>3. 创建kubelet.service文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">sudo vim /lib/systemd/system/kubelet.service</div><div class="line"></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kubelet</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=docker.service</div><div class="line">Requires=docker.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">WorkingDirectory=/var/lib/kubelet</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/kubelet</div><div class="line">ExecStart=/usr/bin/kubelet \</div><div class="line">        $KUBE_LOGTOSTDERR \</div><div class="line">        $KUBE_LOG_LEVEL \</div><div class="line">        $KUBELET_API_SERVER \</div><div class="line">        $KUBELET_ADDRESS \</div><div class="line">        $KUBELET_PORT \</div><div class="line">        $KUBELET_HOSTNAME \</div><div class="line">        $KUBE_ALLOW_PRIV \</div><div class="line">        $KUBELET_POD_INFRA_CONTAINER \</div><div class="line">        $KUBELET_ARGS</div><div class="line">Restart=on-failure</div><div class="line">KillMode=process</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<h3 id="4-启动kubelet服务"><a href="#4-启动kubelet服务" class="headerlink" title="4. 启动kubelet服务"></a>4. 启动kubelet服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo systemctl enable kubelet</div><div class="line">sudo systemctl start kubelet</div><div class="line">sudo systemctl status kubelet</div></pre></td></tr></table></figure>
<h2 id="配置-kube-proxy"><a href="#配置-kube-proxy" class="headerlink" title="配置 kube-proxy"></a>配置 kube-proxy</h2><h3 id="1-创建kube-proxy配置文件"><a href="#1-创建kube-proxy配置文件" class="headerlink" title="1. 创建kube-proxy配置文件"></a>1. 创建kube-proxy配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/kubernetes/proxy</div><div class="line"></div><div class="line"><span class="meta">#</span> kubernetes proxy config</div><div class="line"><span class="meta">#</span> default config should be adequate</div><div class="line"><span class="meta">#</span> Add your own!</div><div class="line">KUBE_PROXY_ARGS=""</div></pre></td></tr></table></figure>
<h3 id="2-创建kube-proxy-service"><a href="#2-创建kube-proxy-service" class="headerlink" title="2. 创建kube-proxy.service"></a>2. 创建kube-proxy.service</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">sudo vim /lib/systemd/system/kube-proxy.service</div><div class="line"></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Proxy</div><div class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</div><div class="line">After=network.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">EnvironmentFile=-/etc/kubernetes/config</div><div class="line">EnvironmentFile=-/etc/kubernetes/proxy</div><div class="line">ExecStart=/usr/bin/kube-proxy \</div><div class="line">        $KUBE_LOGTOSTDERR \</div><div class="line">        $KUBE_LOG_LEVEL \</div><div class="line">        $KUBE_MASTER \</div><div class="line">        $KUBE_PROXY_ARGS</div><div class="line">Restart=on-failure</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<h3 id="3-启动kube-proxy服务"><a href="#3-启动kube-proxy服务" class="headerlink" title="3. 启动kube-proxy服务"></a>3. 启动kube-proxy服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo systemctl enable kube-proxy</div><div class="line">sudo systemctl start kube-proxy</div><div class="line">sudo systemctl status kube-proxy</div></pre></td></tr></table></figure>
<h2 id="配置-Flannel"><a href="#配置-Flannel" class="headerlink" title="配置 Flannel"></a>配置 Flannel</h2><h3 id="0-下载和编译-Flannel"><a href="#0-下载和编译-Flannel" class="headerlink" title="0. 下载和编译 Flannel"></a>0. 下载和编译 Flannel</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone -b v0.5.6 https://github.com/coreos/flannel.git</div><div class="line">cd flannel</div><div class="line">./build</div></pre></td></tr></table></figure>
<p>具体的编译方法可能会不同，请参考flannel目录下的README.md文件。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span># Building flannel</div><div class="line"></div><div class="line">* Step 1: Make sure you have required dependencies installed on your machine. On Ubuntu, run `sudo apt-get install linux-libc-dev golang gcc`.</div><div class="line">On Fedora/Redhat, run `sudo yum install kernel-headers golang gcc`.</div><div class="line">* Step 2: Git clone the flannel repo: `git clone https://github.com/coreos/flannel.git`</div><div class="line">* Step 3: Run the build script: `cd flannel; ./build`</div></pre></td></tr></table></figure></p>
<p>在README.md文件中有如下一段是介绍怎么编译flannel的。其中在第一步中有介绍在Ubuntu中需要sudo apt-get install linux-libc-dev golang gcc 然后就可以./build了</p>
<p>编译完成后有两步</p>
<blockquote>
<ol>
<li>将可执行文件flanneld拷贝到/usr/bin/目录。 </li>
<li>创建/usr/bin/flannel目录，并将dist目录下的mk-docker-opts.sh文件拷贝到/usr/bin/flannel/中。</li>
</ol>
</blockquote>
<h3 id="1-创建flanneld-conf配置文件"><a href="#1-创建flanneld-conf配置文件" class="headerlink" title="1. 创建flanneld.conf配置文件"></a>1. 创建flanneld.conf配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/default/flanneld.conf</div><div class="line"></div><div class="line"><span class="meta">#</span> Flanneld configuration options  </div><div class="line"></div><div class="line"><span class="meta">#</span> etcd url location.  Point this to the server where etcd runs</div><div class="line">FLANNEL_ETCD_ENDPOINTS="http://192.168.1.11:2379"</div><div class="line"></div><div class="line"><span class="meta">#</span> etcd config key.  This is the configuration key that flannel queries</div><div class="line"><span class="meta">#</span> For address range assignment</div><div class="line">FLANNEL_ETCD_PREFIX="/coreos.com/network"</div><div class="line"></div><div class="line"><span class="meta">#</span> Any additional options that you want to pass</div><div class="line"><span class="meta">#</span>FLANNEL_OPTIONS=""</div></pre></td></tr></table></figure>
<p>其中，FLANNEL_ETCD_PREFIX选项是在Master中配置的etcd网络。</p>
<h3 id="2-创建flanneld-service文件"><a href="#2-创建flanneld-service文件" class="headerlink" title="2. 创建flanneld.service文件"></a>2. 创建flanneld.service文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">sudo vim /lib/systemd/system/flanneld.service</div><div class="line"></div><div class="line">[Unit]</div><div class="line">Description=Flanneld</div><div class="line">Documentation=https://github.com/coreos/flannel</div><div class="line">After=network.target</div><div class="line">After=etcd.service</div><div class="line">Before=docker.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">User=root</div><div class="line">EnvironmentFile=/etc/default/flanneld.conf</div><div class="line">ExecStart=/usr/bin/flanneld \</div><div class="line">        -etcd-endpoints=$&#123;FLANNEL_ETCD_ENDPOINTS&#125; \</div><div class="line">        -etcd-prefix=$&#123;FLANNEL_ETCD_PREFIX&#125; \</div><div class="line">        $FLANNEL_OPTIONS</div><div class="line">ExecStartPost=/usr/bin/flannel/mk-docker-opts.sh -k DOCKER_OPTS -d /run/flannel/docker</div><div class="line">Restart=on-failure</div><div class="line">Type=notify</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">RequiredBy=docker.service</div></pre></td></tr></table></figure>
<h3 id="3-启动flanneld服务"><a href="#3-启动flanneld服务" class="headerlink" title="3. 启动flanneld服务"></a>3. 启动flanneld服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload </div><div class="line">sudo systemctl enable flanneld</div><div class="line">sudo systemctl start flanneld</div><div class="line">sudo systemctl status flanneld</div></pre></td></tr></table></figure>
<h2 id="配置-Docker"><a href="#配置-Docker" class="headerlink" title="配置 Docker"></a>配置 Docker</h2><h3 id="1-安装-Docker"><a href="#1-安装-Docker" class="headerlink" title="1. 安装 Docker"></a>1. 安装 Docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt -y install docker.io</div></pre></td></tr></table></figure>
<h3 id="2-使Flannel作用Docker网络"><a href="#2-使Flannel作用Docker网络" class="headerlink" title="2. 使Flannel作用Docker网络"></a>2. 使Flannel作用Docker网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /lib/systemd/system/docker.service.d</div><div class="line">sudo vim /lib/systemd/system/docker.service.d/flannel.conf</div><div class="line"></div><div class="line">[Service]</div><div class="line">EnvironmentFile=-/run/flannel/docker</div></pre></td></tr></table></figure>
<h3 id="3-重启docker服务"><a href="#3-重启docker服务" class="headerlink" title="3. 重启docker服务"></a>3. 重启docker服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo systemctl restart docker</div></pre></td></tr></table></figure>
<p>查看docker是否有了flannel的网络。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ps -ef | grep docker</div></pre></td></tr></table></figure></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>启动各服务的统一脚本<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">for SERVICES in flanneld kube-proxy kubelet docker;</div><div class="line">do</div><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo systemctl restart $SERVICES</div><div class="line">sudo systemctl enable $SERVICES</div><div class="line">sudo systemctl status $SERVICES</div><div class="line">done</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内网下已经搭建好Kubernetes集群，由两台CentOS组成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;192.168.1.11 Master&lt;br&gt;192.168.1.12 Node&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于之前搭建时操作的都是CentOS系统中
    
    </summary>
    
      <category term="Kubernetes" scheme="http://www.googol.tech/categories/k8s/"/>
    
    
  </entry>
  
  <entry>
    <title>GitHub Pages+Hexo搭建博客</title>
    <link href="http://www.googol.tech/2017/08/22/GitHub%20Pages+Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.googol.tech/2017/08/22/GitHub Pages+Hexo搭建博客/</id>
    <published>2017-08-22T06:58:41.000Z</published>
    <updated>2017-10-20T14:45:02.976Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博客中，主要记录我的个人站点维护过程，内容会不定时更新。</p>
<h2 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h2><p>关于博客的主题也是挑了很久，最终选定Maupassant，主要还是喜欢它的简洁和体积小巧。<br>Maupassant最初是由Cho大神为Typecho平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。</p>
<p>Hexo 平台： <a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="external">https://github.com/tufu9441/maupassant-hexo</a></p>
<h2 id="开启文章目录"><a href="#开启文章目录" class="headerlink" title="开启文章目录"></a>开启文章目录</h2><p>比较简单，通常Hexo会自动在文章内容的前面生成一些关于文章的基本描述信息，格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 搭建博客</div><div class="line">date: 2017-08-22 14:58:41</div><div class="line">toc: true</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>只需要在这里面加入来标示开启文章目录功能，这样在博客显示的时候，会自动列出文章的目录。</p>
<h2 id="开启RSS订阅功能"><a href="#开启RSS订阅功能" class="headerlink" title="开启RSS订阅功能"></a>开启RSS订阅功能</h2><h3 id="1-首先安装-hexo-generator-feed"><a href="#1-首先安装-hexo-generator-feed" class="headerlink" title="1. 首先安装 hexo-generator-feed"></a>1. 首先安装 hexo-generator-feed</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
<h3 id="2-配置Hexo根目录-config-yml，配置RSS订阅"><a href="#2-配置Hexo根目录-config-yml，配置RSS订阅" class="headerlink" title="2. 配置Hexo根目录_config.yml，配置RSS订阅"></a>2. 配置Hexo根目录_config.yml，配置RSS订阅</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">plugin:</div><div class="line">  - hexo-generator-feed</div><div class="line"><span class="meta">#</span>Feed Atom</div><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: 20</div></pre></td></tr></table></figure>
<h2 id="使用Hexo-admin管理博客"><a href="#使用Hexo-admin管理博客" class="headerlink" title="使用Hexo-admin管理博客"></a>使用Hexo-admin管理博客</h2><h3 id="安装Hexo-admin"><a href="#安装Hexo-admin" class="headerlink" title="安装Hexo-admin"></a>安装Hexo-admin</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-admin</div><div class="line">hexo server -d</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客中，主要记录我的个人站点维护过程，内容会不定时更新。&lt;/p&gt;
&lt;h2 id=&quot;博客主题&quot;&gt;&lt;a href=&quot;#博客主题&quot; class=&quot;headerlink&quot; title=&quot;博客主题&quot;&gt;&lt;/a&gt;博客主题&lt;/h2&gt;&lt;p&gt;关于博客的主题也是挑了很久，最终选定Maupas
    
    </summary>
    
      <category term="Hexo" scheme="http://www.googol.tech/categories/hexo/"/>
    
    
  </entry>
  
</feed>
